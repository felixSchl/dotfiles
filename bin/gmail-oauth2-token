#!/bin/bash
# retrieve an access token to gmail.
# expected environment variables:
#   OAUTH_CLIENT_SECRET  -  the oauth2 client secret.
#     can be retrieved from here at any time:
#       https://console.cloud.google.com/apis/credentials
#   OAUTH_REFRESH_TOKEN_${account}
#     the refresh token for the given account.

set -eo pipefail

# Google oauth2 info. Can be retrieved from here at any time:
# https://console.cloud.google.com/apis/credentials
OAUTH_CLIENT_ID='153322685357-4rjb09o5go4r1f7elcggc35jrgkdrnk2.apps.googleusercontent.com'

if [[ -z "$OAUTH_CLIENT_SECRET" ]]; then
	echo >&2 'OAUTH_CLIENT_SECRET not set.'
	exit 1
fi

# accounts
accounts=(felix sylo)

accounts_felix_user=felixschlitter@gmail.com
accounts_sylo_user=felix@sylo.io

die () { echo >&2 "$@"; exit 1; }

help () { echo 'usage: get-oauth-token <account>'; }

check_params () {
	for p in "$@"; do
		if [[ -z "${!p}" ]]; then
			help >&2; echo >&2 "<$p> missing"; exit 1;
		fi
	done
}

account=$1
check_params account

if ! command > /dev/null -v 'oauth2.py'; then
	die 'oauth2.py not found. Please place oauth2.py in PATH'
fi

user_var="accounts_${account}_user"
user="${!user_var}"
if [[ -z "${user}" ]]; then
	die "Account '${account}' not known. Available accounts are ${accounts[@]}"
fi

refresh_token_var="OAUTH_REFRESH_TOKEN_${account}"
refresh_token="${!refresh_token_var}"
if [[ -z "$refresh_token" ]]; then
	die "Account '${account}' refresh token not found. Please obtain and set it as $refresh_token_var first."
fi

oauth2.py \
	--quiet \
	--client_id="$OAUTH_CLIENT_ID" \
	--client_secret="$OAUTH_CLIENT_SECRET" \
	--refresh_token="$refresh_token"
