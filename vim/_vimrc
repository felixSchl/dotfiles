" vim:foldmethod=marker
" Init vundle {{{
" -------------------------------------------------------------------------------
let s:isWin=0
let s:isLinux=0
if has('win32') || has('win64')
  set rtp+=~/vimfiles/bundle/vundle/
  call vundle#rc('$HOME/vimfiles/bundle/')
  let s:isWin=1
else
  " Usual quickstart instructions
  set rtp+=~/.vim/bundle/vundle/
  call vundle#rc()
  let s:isLinux=1
endif
" }}}
" Mandatory settings {{{
" ------------------------------------------------------------------------------
set guioptions+=M
set nocompatible
filetype indent plugin on
" }}}
" Mappings {{{
" ------------------------------------------------------------------------------
let mapleader = ","
if (s:isWin)
    nmap <F2>           :e ~/_vimrc<CR>
    nmap <F3>           :so ~/_vimrc<CR>
    nmap <leader>E      :Start explorer %:h<CR>
else
    nmap <F2>           :e ~/.vimrc<CR>
    nmap <F3>           :so ~/.vimrc<CR>
endif
nmap Q              <Nop>
nmap <F4>           :nohl<CR>
" Easier copying and pasting
nmap <leader>p      "*p
nmap <leader>P      "*P
" Start process from vim
nmap <leader>e      :Start %s<CR>
nmap <leader>e      :Start %s:h<CR>
" Easier window navigation
nmap <C-H>          <C-W>h
nmap <C-J>          <C-W>j
nmap <C-K>          <C-W>k
nmap <C-L>          <C-W>l
" Mouse scrolling
map <ScrollWheelUp> <C-Y>
map <S-ScrollWheelUp> <C-U>
map <ScrollWheelDown> <C-E>
map <S-ScrollWheelDown> <C-D>
" }}}
" Bundles {{{
Bundle 'flazz/vim-colorschemes'
Bundle 'tpope/vim-dispatch'
Bundle 'tpope/vim-fugitive'
Bundle 'tsaleh/vim-matchit'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'honza/vim-snippets'
Bundle 'tpope/vim-surround'
Bundle 'Townk/vim-autoclose'
" Bundle 'maciakl/vim-neatstatus'
Bundle 'ervandew/supertab'
Bundle 'Rykka/riv.vim'
Bundle 'plasticboy/vim-markdown.git'
Bundle 'vim-scripts/cg.vim'

Bundle 'vim-scripts/mru.vim'
nmap <leader>r                  :MRU<CR>

Bundle 'bling/vim-airline'
set lazyredraw
let g:airline_theme             = 'powerlineish'
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1

Bundle 'dhruvasagar/vim-table-mode'
let g:table_mode_corner = '+'

Bundle 'tomtom/tcomment_vim'
nmap <C-K> gccj
vmap <C-K> gc

Bundle 'scrooloose/nerdtree'
nmap <F6> :NERDTreeToggle<CR>
let g:NERDTreeHighlightCursorline=1
let g:NERDTreeWinPos="right"

Bundle 'majutsushi/tagbar'
nmap <F5> :TagbarToggle<CR>
let g:tagbar_left=1

Bundle 'thinca/vim-visualstar'
nmap * <Plug>(visualstar-*)N

Bundle 'milkypostman/vim-togglelist'
nmap <script> <silent> <leader>l :call ToggleLocationList()<CR>
nmap <script> <silent> <leader>q :call ToggleQuickfixList()<CR>

Bundle 'vim-scripts/toggle_words.vim'
nmap <leader>\ :ToggleWord<CR>

" Bundle 'sjl/gundo.vim'
" nmap <leader>u :GundoToggle<CR>
"
Bundle 'tyru/open-browser.vim'
let g:netrw_nogx = 1
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)

Bundle 'kien/ctrlp.vim'
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPCurWD'
" }}}
" Global preferences {{{
" ------------------------------------------------------------------------------
syntax on
set fillchars=diff:·
set viminfo=%,'50,<1000,s100,\"100
set viminfo+=!
set autoindent
set backspace=indent,eol,start
set complete-=1
set showmatch
set smarttab
set nrformats-=octal
set shiftround
set ttimeout
set ttimeoutlen=50
set exrc
set hidden
set nospell
set showcmd
set incsearch
set hlsearch
set number
set norelativenumber
set nowrap
set ruler
set linebreak
set showbreak=>>
set cursorline
set ignorecase
set smartcase
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set textwidth=80
set foldmethod=syntax
set formatoptions-=t
set foldcolumn=3
autocmd FileType qf wincmd J " quickfix list at bottom
set wildignore=*.o,*.obj,*.bak,*.exe,*.pyc,*.swp
set suffixes+=.class,.exe,.o,.obj,.dat,.dll,.aux,.pdf,.gch
set wildmenu
set wildmode=longest:list,full
set laststatus=2
set ttimeoutlen=50
if (s:isWin)
    set shell=cmd.exe
    set shellcmdflag=/c\ powershell.exe\ -NoLogo\ -NoProfile\ -NonInteractive\ -ExecutionPolicy\ RemoteSigned
    set shellpipe=|
    set shellredir=>
endif
" }}}
" Theme  {{{
" ------------------------------------------------------------------------------
set colorcolumn=+1
if has("gui_running")
    colorscheme molokai
    highlight ColorColumn guibg=#2d2d2d ctermbg=255
    highlight CursorLine guibg=#333333
    autocmd InsertEnter * highlight CursorLine guibg=#113254 guifg=NONE
    autocmd InsertLeave * highlight CursorLine guibg=#333333 guifg=NONE
    " TagHighlight classes
    highlight Class guifg=#5199C0
    highlight LocalVariable guifg=#ffffff
    highlight Function guifg=#F4F885
    if (s:isWin)
        set guifont=Consolas:h11:cANSI
    else
        set guifont=DejaVu\ \Sans\ Mono\ for\ Powerline\ 9 
    endif
    set guioptions-=m
    set guioptions+=c
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=R
    set guioptions-=b
    set guioptions-=T
else
    set t_Co=256
    colorscheme xoria256
    highlight ColorColumn guibg=#2d2d2d ctermbg=0
endif
" }}}
" Filetypes {{{
" ------------------------------------------------------------------------------
" Adobe extend script 
autocmd BufRead,BufNewFile *.jsx setlocal filetype=javascript
autocmd BufRead,BufNewFile *.jsxinc setlocal filetype=javascript
autocmd BufRead,BufNewFile *.mxi setlocal filetype=xml

" CSharp
autocmd BufRead,BufNewFile *.cshtml setlocal filetype=xml.javascript

" ActionScript3
autocmd BufRead,BufNewFile *.as set filetype=as3

" Mardown
autocmd BufRead,BufNewFile *.md set filetype=markdown

" Java
let java_highlight_all=1
let java_highlight_debug=1
autocmd filetype java setlocal suffixesadd+=.java
" }}}
" ------------------------------------------------------------------------------ 
" Custard Square {{{
" ------------------------------------------------------------------------------
" Start the smartfox server
func! StartSFS2X()
    execute 'Start ' . $SFS2X . '/restartSFS2X.bat' 
endfunc
nmap <silent> <leader>ws         :call StartSFS2X()<CR>
" }}}
" Tracking {{{
" ------------------------------------------------------------------------------
func! TrackerAddItem()
    let b:ve=&ve
    set ve=all
    execute 'normal 0$  v80|r-$hhhhxxxxx iOPEN'
    let &ve=b:ve
    unlet! b:ve
endfunc

func! TrackerCloseItem()
    execute 'normal 0 /OPEN$/ciwDONE'
endfunc

func! TrackerOpenItem()
    execute 'normal 0 /DONE$/ciwOPEN'
endfunc

nmap <silent> <leader>ma        :call TrackerAddItem()<CR>
nmap <silent> <leader>mc        :call TrackerCloseItem()<CR>
nmap <silent> <leader>mo        :call TrackerOpenItem()<CR>
vmap <silent> <leader>ma        :call TrackerAddItem()<CR>
vmap <silent> <leader>mc        :call TrackerCloseItem()<CR>
vmap <silent> <leader>mo        :call TrackerOpenItem()<CR>
" }}}
